#! /bin/bash

if [ $# != 6 ] ; then
echo "Usage:		gdbMulArch [binary] [arch] [version] [localPort] [_libc_start_got_offset] [gdb]"
echo "Example:		gdbMulArch binary arm 2.27 12345 0x12098 pwndbg"
echo "Example:		gdbMulArch binary mipsel 2.29 12345 0x12098 gef"
exit 1;
fi

binary=$1
arch=$2
version=$3
localPort=$4
__libc_start_main_Got_addr=$5
gdbTool=$6


if [ ${arch} == "arm" ]; then
	archGDB="qemu-arm"
	linkLibrary="/home/hacker/glibc/${version}/${arch}/"
elif [ ${arch} == "aarch64" ]; then
	archGDB="qemu-aarch64"
	linkLibrary="/home/hacker/glibc/${version}/${arch}/"
elif [ ${arch} == "mipsel" ]; then
	archGDB="qemu-mipsel"
	linkLibrary="/home/hacker/glibc/${version}/${arch}/"
elif [ ${arch} == "mips" ]; then
	archGDB="qemu-mips"
	linkLibrary="/home/hacker/glibc/${version}/${arch}/"
elif [ ${arch} == "mips64" ]; then
	archGDB="qemu-mips64"
	linkLibrary="/home/hacker/glibc/${version}/${arch}/"
elif [ ${arch} == "mips64el" ]; then
	archGDB="qemu-mips64el"
	linkLibrary="/home/hacker/glibc/${version}/${arch}/"
else
	echo "No such Arch!"
	exit 1;
fi


if [ ${gdbTool} == "pwndbg" ]; then
	gnome-terminal -- bash -c "gdb-multiarch -q ${binary} --eval-command='target remote localhost:${localPort}' --eval-command='getAllAddr ${linkLibrary}/lib/libc.so.6 ${arch} ${__libc_start_main_Got_addr} ${gdbTool}' --eval-command='add-symbol-file-all'"
	${archGDB} -L ${linkLibrary} -g ${localPort} ${binary}
elif [ ${gdbTool} == "gef" ]; then
	cp ~/mulArchAll/gdbinit/gdbinitPwndbg ~/.gdbinit
	gnome-terminal -- bash -c "gdb-multiarch -q ${binary} --eval-command='target remote localhost:${localPort}' --eval-command='getAllAddr ${linkLibrary}/lib/libc.so.6 ${arch} ${__libc_start_main_Got_addr} ${gdbTool}'"
	${archGDB} -L ${linkLibrary} -g ${localPort} ${binary}

	cp ~/mulArchAll/gdbinit/gdbinitGEF ~/.gdbinit
	gnome-terminal -- bash -c "gdb-multiarch -q ${binary} --eval-command='target remote localhost:${localPort}' --eval-command='add-symbol-file-all'"
	${archGDB} -L ${linkLibrary} -g ${localPort} ${binary}
	cp ~/mulArchAll/gdbinit/gdbinitPwndbg ~/.gdbinit
else
	echo "Can't support such gdb plugins!"
	exit 1;
fi